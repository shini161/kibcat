{% raw %}Estrai dalla conversazione dei filtri deterministici da applicare alla ricerca su Kibana, e restituisci un JSON strutturato.

I filtri sono strutturati in questo modo:
[field] [operator] [value]
dove [field] indica la chiave, ovvero il valore o variabile per cui filtrare
[operator] indica la relazione tra i valori. Gli operatori possibili sono: {% endraw %}{{ operators_str }}{% raw %}.
e infine [value] indica il valore a cui si sta comparando.

SOLO se l'utente lo chiede esplicitamente, puoi compilare l'attributo "query", che rappresenta una stringa di ricerca *opzionale*.  
Questa stringa può essere in formato Kibana Query Language (KQL) oppure un campo di testo libero, in base a cosa chiede l'utente.
L'utente può specificare anche di inserire come query un determinato filtro.

*NOTA BENE:* di default, i filtri devono essere aggiunti alla lista "filters" e non come parte della query, a meno che l'utente non richieda esplicitamente di farlo.
*NOTA BENE:* se hai applicato uno specifico filtraggio tramite query, e questo corrispnonde esattamente a un filtro, allora non devi aggiungere quel filtro alla lista "filters", ma solo alla query.

FORMATO:
L'output che devi ritornare è un dict JSON contenente tre elementi, "filters", "start_time" e "end_time":
# "filters"
"filters": una lista di dizionari che indicano il filtraggio.
Ogni dizionario ha varie proprietà:
"field": la [field] da comparare
"operator": l' [operator] da usare. Usa il *NOME ESATTO* dell'operatore che vuoi usare, tra quelli indicati in precedenza.
"value": il [value] per l'operatore
# "query"
"query": una stringa che rappresenta la query di ricerca, in formato Kibana Query Language (KQL) oppure un campo di testo libero.  
Questa stringa è opzionale e può essere omessa se non è presente nella conversazione.
# "start_time" 
"start_time": indica fino a quanto tempo fa estendere la ricerca in *iso8601Duration* __se l'utente non specifica questo parametro, è "{% endraw %}{{ DEFAULT_START_TIME }}{% raw %}"__.
# "end_time"
"end_time": indica fino a quanto tempo estendere la ricerca in *iso8601Duration* __se l'utente non specifica questo parametro, è "{% endraw %}{{ DEFAULT_END_TIME }}{% raw %}"__.

**iso8601Duration**  
*Type:* `string`  
*Description:* A duration expressed in ISO 8601 format.

**Format:**
- Always starts with `P` (for "period")
- **Date components** (optional):
  - `Y` = years  
  - `M` = months (in the date part)  
  - `D` = days  
- **Time components** (optional, must be preceded by `T`):
  - `H` = hours  
  - `M` = minutes (in the time part)  
  - `S` = seconds  

**Rules:**
1. Time components must be preceded by `T`
2. Only include components that are needed
3. Use the order: `P` → `Y` → `M` → `D` → `T` → `H` → `M` → `S`

**Examples:**
- `PT10M` → 10 minutes  
- `P1DT2H` → 1 day and 2 hours  
- `P3Y6M4DT12H30M5S` → 3 years, 6 months, 4 days, 12 hours, 30 minutes, and 5 seconds


IMPORTANTE:
Alcune [field] possono essere sottointese dall'utente, ecco la lista di esse e delle loro descrizioni:
{% endraw %}{{ main_fields_str }}{% raw %}

ESEMPIO:
conversazione: "Aggiungi un filtraggio in modo che example.test.kubernetes.num sia uguale a 8 e log.level sia di errore negli ultimi 50 minuti e aggiungi 'Luigi' come query di ricerca."
output: "{
"filters": [{
"field":"example.test.kubernetes.num",
"operator":"is",
"value":8
},
{
"field":"log.level",
"operator":"is_not",
"value":"error"
}],
"start_time": "PT50M",
"end_time": "PT0S",
"query": "Luigi"
}"

CONVERSAZIONE:
{% endraw %}{{ conversation_history }}